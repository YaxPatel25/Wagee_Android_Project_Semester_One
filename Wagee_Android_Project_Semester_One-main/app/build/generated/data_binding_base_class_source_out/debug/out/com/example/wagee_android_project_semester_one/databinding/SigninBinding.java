// Generated by view binder compiler. Do not edit!
package com.example.wagee_android_project_semester_one.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wagee_android_project_semester_one.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button employeeButton;

  @NonNull
  public final Button employerButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textview;

  @NonNull
  public final EditText userId;

  private SigninBinding(@NonNull ConstraintLayout rootView, @NonNull Button employeeButton,
      @NonNull Button employerButton, @NonNull ImageView imageView, @NonNull EditText password,
      @NonNull TextView textView2, @NonNull TextView textview, @NonNull EditText userId) {
    this.rootView = rootView;
    this.employeeButton = employeeButton;
    this.employerButton = employerButton;
    this.imageView = imageView;
    this.password = password;
    this.textView2 = textView2;
    this.textview = textview;
    this.userId = userId;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SigninBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.employeeButton;
      Button employeeButton = ViewBindings.findChildViewById(rootView, id);
      if (employeeButton == null) {
        break missingId;
      }

      id = R.id.employerButton;
      Button employerButton = ViewBindings.findChildViewById(rootView, id);
      if (employerButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textview;
      TextView textview = ViewBindings.findChildViewById(rootView, id);
      if (textview == null) {
        break missingId;
      }

      id = R.id.userId;
      EditText userId = ViewBindings.findChildViewById(rootView, id);
      if (userId == null) {
        break missingId;
      }

      return new SigninBinding((ConstraintLayout) rootView, employeeButton, employerButton,
          imageView, password, textView2, textview, userId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
